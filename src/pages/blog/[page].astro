---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogBrief from "../../components/blogBrief.vue";
import BaseLayout from "../../layouts/baseLayout.astro";
export const prerender = false;

type Props = CollectionEntry<"blog">;
// export async function getStaticPaths({ paginate }) {
//   return paginate(localPosts, { pageSize: PAGE_SIZE });
// }
const localPosts = (await getCollection("blog")).sort(
  (a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf(),
);
let extra = await fetch("http://localhost:8080/api/blog", { method: "GET" });
const remotePosts = (await extra.json()).map((item) => {
  return {
    slog: item.title,
    data: {
      ...item
    }
  }
});
console.log("remote posts:", remotePosts);
console.log("[page] props", Astro.props, ",params:", Astro.params);
const allPosts = localPosts.concat(remotePosts)
---

<BaseLayout>
  <section>
    <BlogBrief blogs={allPosts} />
  </section>
</BaseLayout>
<script type="module">

</script>